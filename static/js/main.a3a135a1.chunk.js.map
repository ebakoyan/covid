{"version":3,"sources":["api/index.js","components/Card/Card.js","components/Chart/Chart.js","components/Country/List.js","components/Country/Country.js","App.js","index.js","App.module.css","components/Card/Card.module.css","components/Country/Country.module.css"],"names":["_url","fetchGlobal","a","axios","get","data","confirmed","deaths","lastUpdate","fetchDaily","newData","i","length","b","totalConfirmed","total","reportDate","push","fetchCountry","country","value","fetchCountryList","modifedData","countries","map","c","name","Card","type","color","number","report","className","s","container","style","toLocaleString","Date","toDateString","backgroundColor","width","height","position","bottom","Chart","state","loading","this","props","setState","console","log","labels","datasets","label","options","legend","display","title","text","date","toLocaleDateString","borderColor","fill","Component","List","setCountry","onClick","cursor","Country","list","search","show","countryList","forEach","toLowerCase","includes","component","input","placeholder","onChange","target","App","then","res","top","chart","ReactDOM","render","document","getElementById","module","exports"],"mappings":"wNAEMA,EAAO,iCAEAC,EAAW,uCAAG,oCAAAC,EAAA,sEAObC,IAAMC,IAAIJ,GAPG,2BAEnBK,KACIC,EAHe,EAGfA,UACAC,EAJe,EAIfA,OACAC,EALe,EAKfA,WALe,kBAQhB,CAACF,YAAWC,SAAOC,eARH,2CAAH,qDAWXC,EAAU,uCAAG,oCAAAP,EAAA,sEACAC,IAAMC,IAAN,UAAaJ,EAAb,WADA,OAItB,IAJsB,SACfK,EADe,EACfA,KAEHK,EAAU,GACNC,EAAI,EAAEA,EAAEN,EAAKO,OAAOD,IACpBE,EAAI,CACJP,UAAUD,EAAKM,GAAGG,eAClBP,OAAOF,EAAKM,GAAGJ,OAAOQ,MACtBP,WAAWH,EAAKM,GAAGK,YAEvBN,EAAQO,KAAKJ,GAVK,yBAYfH,GAZe,2CAAH,qDAcVQ,EAAY,uCAAG,WAAOC,GAAP,iBAAAjB,EAAA,sEACJC,IAAMC,IAAN,UAAaJ,EAAb,sBAA+BmB,IAD3B,uBACjBd,EADiB,EACjBA,KADiB,kBAGjB,CACHC,UAAUD,EAAKC,UAAUc,MACzBb,OAAOF,EAAKE,OAAOa,MACnBZ,WAAWH,EAAKG,aANI,2CAAH,sDAUZa,EAAgB,uCAAG,gCAAAnB,EAAA,sEACNC,IAAMC,IAAN,UAAaJ,EAAb,eADM,uBACrBK,EADqB,EACrBA,KAEHiB,EAAajB,EAAKkB,UAAUC,KAAI,SAAAC,GAAC,OAAEA,EAAEC,QAHb,kBAKrBJ,GALqB,2CAAH,qD,iBCjBdK,EApBF,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OAChC,OACI,qBAAKC,UAAWC,IAAEC,UAAlB,SACI,gCACI,oBAAIC,MAAO,CAACN,MAAMA,GAAlB,SAA2BD,IAC3B,6BAAKE,EAAOM,mBACZ,6BAAK,IAAIC,KAAKN,GAAQO,iBACtB,sEACA,qBACIH,MAAO,CACPI,gBAAgB,GAAD,OAAKV,GACpBW,MAAO,OACPC,OAAQ,OACRC,SAAU,WACVC,OAAQ,a,QCwEbC,EApFf,4MACIC,MAAQ,CACJxC,KAAM,GACNyC,SAAS,GAHjB,gLAMYC,KAAKC,MAAM7B,QANvB,4BAOY4B,KAPZ,SAQ4B7B,EAAa6B,KAAKC,MAAM7B,SARpD,yBAQgBd,KARhB,WAOiB4C,SAPjB,mDAWYF,KAXZ,UAWuCtC,IAXvC,0BAW2BJ,KAX3B,WAWiB4C,SAXjB,wBAaQF,KAAKE,SAAS,CAACH,SAAS,IAbhC,0LAe8BE,GAf9B,oEAgBYD,KAAKC,MAAM7B,SAAU6B,EAAM7B,QAhBvC,4BAiBY4B,KAjBZ,SAkB4B7B,EAAa8B,EAAM7B,SAlB/C,yBAkBgBd,KAlBhB,WAiBiB4C,SAjBjB,uBAqBQC,QAAQC,IAAIH,GArBpB,sIA0BQ,OAAID,KAAKF,MAAMC,QACJ,yCAEPC,KAAKC,MAAM7B,QACJ,cAAC,MAAD,CACHd,KAAM,CACN+C,OAAQ,CACJ,WAAY,UAEhBC,SAAU,CACN,CACIC,MAAO,SACPf,gBAAiB,CACb,MAAO,SAEXlC,KAAM,CAAC0C,KAAKF,MAAMxC,KAAKC,UAAWyC,KAAKF,MAAMxC,KAAKE,WAI1DgD,QAAS,CACTC,OAAQ,CACJC,SAAS,GAEbC,MAAO,CACHD,SAAS,EACTE,KAAK,oBAAD,OAAsBZ,KAAKC,MAAM7B,aAI1C,cAAC,OAAD,CACHd,KAAM,CACN+C,OAAQL,KACHF,MACAxC,KACAmB,KAAI,SAACoC,GAAD,OAAU,IAAIvB,KAAKuB,EAAKpD,YAAYqD,wBAC7CR,SAAU,CACN,CACIhD,KAAM0C,KACDF,MACAxC,KACAmB,KAAI,SAACnB,GAAD,OAAUA,EAAKC,aACxBgD,MAAO,WACPQ,YAAa,MACbC,MAAM,GACP,CACC1D,KAAM0C,KACDF,MACAxC,KACAmB,KAAI,SAACnB,GAAD,OAAUA,EAAKE,UACxB+C,MAAO,SACPQ,YAAa,QACbvB,gBAAiB,QACjBwB,MAAM,WA9E1B,GAA2BC,aCGZC,EAPF,SAAC,GAAD,IAAEvC,EAAF,EAAEA,KAAKwC,EAAP,EAAOA,WAAP,OACT,qBAAKC,QAAS,kBAAID,EAAWxC,IAAOS,MAAO,CAACiC,OAAO,WAAnD,SACI,6BACK1C,O,iBCEQ2C,E,4MACjBxB,MAAQ,CACJyB,KAAM,CAAC,OACPC,OAAQ,GACRzB,SAAS,EACT0B,MAAK,G,wLAGLzB,K,SAA2B1B,I,yBAAZiD,K,WAAVrB,S,gBACLF,KAAKE,SAAS,CAACH,SAAS,I,qIAElB,IAAD,OACD2B,EAAc,GAClB1B,KACKF,MACAyB,KACAI,SAAQ,SAAAxE,GACDA,EAAEyE,cAAcC,SAAS,EAAK/B,MAAM0B,OAAOI,gBAC3CF,EAAYxD,KAAKf,MAG7B,IAGI2E,EAAY,GAChB,IAAI9B,KAAKF,MAAMC,QACX,IAAI,IAAInC,EAAG,EAAEA,EAAE,EAAEA,IAAI,CACjB,IAAIT,EAAEuE,EAAY9D,GAClBkE,EAAU5D,KAAK,cAAC,EAAD,CAAMS,KAAQxB,EAAGgE,WAAYnB,KAAKC,MAAMkB,YAAiBhE,IAGhF,OACI,sBAAK8B,UAAWC,IAAE6C,MAAlB,UACI,uBAAOlD,KAAK,OAAOmD,YAAY,SAASC,SAZ1B,SAAC,GAAuB,IAAb5D,EAAY,EAArB6D,OAAS7D,MAC7B,EAAK6B,SAAS,CAACsB,OAAQnD,KAW8C+C,QAAS,kBAAI,EAAKlB,SAAS,CAACuB,MAAK,OAClG,8BACKzB,KAAKF,MAAM2B,KAAOK,EAAW,c,GAnCbb,a,iBCGhBkB,E,4MACjBrC,MAAQ,CACJxC,KAAM,GACNyC,SAAS,EACT3B,QAAS,I,EASb+C,WAAa,SAAC/C,GACV,EAAK8B,SAAS,CAAC9B,QAAQA,K,kEARN,IAAD,OAChBlB,IAAckF,MAAK,SAACC,GAChB,EAAKnC,SAAS,CAAC5C,KAAM+E,IACrB,EAAKnC,SAAS,CAACH,SAAS,S,+BAOtB,IAAD,OACL,OAAIC,KAAKF,MAAMC,QACJ,yCAGP,gCACI,sBAAKd,UAAWC,IAAEC,UAAlB,UACI,cAAC,EAAD,CACIN,KAAK,WACLC,MAAM,MACNC,OAAQiB,KAAKF,MAAMxC,KAAKC,UAAUc,MAClCW,OAAQgB,KAAKF,MAAMxC,KAAKG,aAC5B,qBAAKwB,UAAWC,IAAEoD,IAAlB,SACI,6BAAKtC,KAAKF,MAAM1B,YAEpB,cAAC,EAAD,CACIS,KAAK,SACLC,MAAM,QACNC,OAAQiB,KAAKF,MAAMxC,KAAKE,OAAOa,MAC/BW,OAAQgB,KAAKF,MAAMxC,KAAKG,gBAEhC,cAAC,EAAD,CAAS0D,WAAY,SAACvD,GAAD,OAAK,EAAKuD,WAAWvD,MAC1C,qBAAKqB,UAAWC,IAAEqD,MAAlB,SACI,cAAC,EAAD,CAAOnE,QAAS4B,KAAKF,MAAM1B,mB,GAvCd6C,aCHjCuB,IAASC,OACL,cAAC,EAAD,IAAQC,SAASC,eAAe,U,mBCLpCC,EAAOC,QAAU,CAAC,UAAY,uBAAuB,IAAM,iBAAiB,MAAQ,qB,mBCApFD,EAAOC,QAAU,CAAC,UAAY,0B,mBCA9BD,EAAOC,QAAU,CAAC,MAAQ,yB","file":"static/js/main.a3a135a1.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nconst _url = \"https://covid19.mathdro.id/api\"\r\n\r\nexport const fetchGlobal = async() => {\r\n    const {\r\n        data: {\r\n            confirmed,\r\n            deaths,\r\n            lastUpdate\r\n        }\r\n    } = await axios.get(_url)\r\n    return {confirmed, deaths,lastUpdate}\r\n}\r\n\r\nexport const fetchDaily = async () =>{\r\n    const {data}  = await axios.get(`${_url}/daily`)\r\n\r\n    let newData = [];\r\n    for(let i = 0;i<data.length;i++){\r\n        let b = {\r\n            confirmed:data[i].totalConfirmed,\r\n            deaths:data[i].deaths.total,\r\n            lastUpdate:data[i].reportDate\r\n        }\r\n        newData.push(b)\r\n    }\r\n    return newData\r\n}\r\nexport const fetchCountry = async (country) =>{\r\n    const {data}= await axios.get(`${_url}/countries/${country}`)\r\n\r\n    return {\r\n        confirmed:data.confirmed.value,\r\n        deaths:data.deaths.value,\r\n        lastUpdate:data.lastUpdate\r\n    }\r\n}\r\n\r\nexport const fetchCountryList = async ()=>{\r\n    const {data}  = await axios.get(`${_url}/countries`)\r\n\r\n    let modifedData= data.countries.map(c=>c.name)\r\n\r\n    return modifedData;\r\n}","import s from './Card.module.css'\r\n\r\nconst Card = ({type, color, number, report}) => {\r\n    return (\r\n        <div className={s.container}>\r\n            <div>\r\n                <h3 style={{color:color}}>{type}</h3>\r\n                <h3>{number.toLocaleString()}</h3>\r\n                <h2>{new Date(report).toDateString()}</h2>\r\n                <p>Number of active cases from COVID-19.</p>\r\n                <div\r\n                    style={{\r\n                    backgroundColor: `${color}`,\r\n                    width: \"100%\",\r\n                    height: \"20px\",\r\n                    position: \"absolute\",\r\n                    bottom: \"0\"\r\n                }}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Card","import {Line, Bar} from 'react-chartjs-2'\r\nimport {Component} from \"react\"\r\nimport {fetchDaily, fetchCountry} from \"../../api\"\r\n\r\nexport class Chart extends Component {\r\n    state = {\r\n        data: {},\r\n        loading: true\r\n    }\r\n    async componentDidMount() {\r\n        if (this.props.country) {\r\n            this.setState({\r\n                data: await fetchCountry(this.props.country)\r\n            })\r\n        } else {\r\n            this.setState({data: await fetchDaily()})\r\n        }\r\n        this.setState({loading: false})\r\n    }\r\n    async componentWillUpdate(props) {\r\n        if (this.props.country !=props.country) {\r\n            this.setState({\r\n                data: await fetchCountry(props.country)\r\n            })\r\n        }\r\n        console.log(props)\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props,this.state.data)\r\n        if (this.state.loading) {\r\n            return <h2>Loading</h2>\r\n        }\r\n        if (this.props.country) {\r\n            return <Bar\r\n                data={{\r\n                labels: [\r\n                    'Infected', 'Deaths'\r\n                ],\r\n                datasets: [\r\n                    {\r\n                        label: 'People',\r\n                        backgroundColor: [\r\n                            'red', 'black'\r\n                        ],\r\n                        data: [this.state.data.confirmed, this.state.data.deaths]\r\n                    }\r\n                ]\r\n            }}\r\n                options={{\r\n                legend: {\r\n                    display: false\r\n                },\r\n                title: {\r\n                    display: true,\r\n                    text: `Current state in ${this.props.country}`\r\n                }\r\n            }}/>\r\n        }\r\n        return <Line\r\n            data={{\r\n            labels: this\r\n                .state\r\n                .data\r\n                .map((date) => new Date(date.lastUpdate).toLocaleDateString()),\r\n            datasets: [\r\n                {\r\n                    data: this\r\n                        .state\r\n                        .data\r\n                        .map((data) => data.confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: 'red',\r\n                    fill: true\r\n                }, {\r\n                    data: this\r\n                        .state\r\n                        .data\r\n                        .map((data) => data.deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'black',\r\n                    backgroundColor: 'black',\r\n                    fill: true\r\n                }\r\n            ]\r\n        }}/>\r\n    }\r\n}\r\nexport default Chart","const List = ({name,setCountry})=>(\r\n    <div onClick={()=>setCountry(name)} style={{cursor:\"pointer\"}}>\r\n        <h2>\r\n            {name}\r\n        </h2>\r\n    </div>\r\n)\r\nexport default List","import {Component} from 'react'\r\nimport List from \"./List\"\r\nimport s from './Country.module.css'\r\nimport {fetchCountryList} from '../../api'\r\n\r\nexport default class Country extends Component {\r\n    state = {\r\n        list: ['USA'],\r\n        search: \"\",\r\n        loading: true,\r\n        show:false\r\n    }\r\n    async componentDidMount() {\r\n        this.setState({list: await fetchCountryList()})\r\n        this.setState({loading: false})\r\n    }\r\n    render() {\r\n        let countryList = []\r\n        this\r\n            .state\r\n            .list\r\n            .forEach(a => {\r\n                if (a.toLowerCase().includes(this.state.search.toLowerCase())) {\r\n                    countryList.push(a)\r\n                }\r\n            })\r\n        const changeHandler = ({target: {value}}) => {\r\n            this.setState({search: value})\r\n        }\r\n        let component = [];\r\n        if(!this.state.loading){\r\n            for(let i =0;i<3;i++){\r\n                let a=countryList[i]\r\n                component.push(<List name = {a} setCountry={this.props.setCountry} key={a}/>)\r\n            }\r\n        }\r\n        return (\r\n            <div className={s.input}>\r\n                <input type=\"text\" placeholder='Search' onChange={changeHandler} onClick={()=>this.setState({show:true})}/>\r\n                <div>\r\n                    {this.state.show ? component :null}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import {Component} from \"react\"\n\nimport {fetchGlobal,} from './api'\n\nimport {Card, Chart,Country} from './components'\n\nimport s from './App.module.css'\n\nexport default class App extends Component {\n    state = {\n        data: {},\n        loading: true,\n        country: ''\n    }\n    componentDidMount() {\n        fetchGlobal().then((res) => {\n            this.setState({data: res})\n            this.setState({loading: false})\n        })\n\n    }\n    setCountry = (country)=>{\n        this.setState({country:country})\n    }\n    render() {\n        if (this.state.loading) {\n            return <h2>Loading</h2>\n        }\n        return (\n            <div>\n                <div className={s.container}>\n                    <Card\n                        type=\"Infected\"\n                        color=\"red\"\n                        number={this.state.data.confirmed.value}\n                        report={this.state.data.lastUpdate}/>\n                    <div className={s.top}>\n                        <h2>{this.state.country}</h2>\n                    </div>\n                    <Card\n                        type=\"Deaths\"\n                        color=\"black\"\n                        number={this.state.data.deaths.value}\n                        report={this.state.data.lastUpdate}/>\n                </div>\n                <Country setCountry={(i)=>this.setCountry(i)}/>\n                <div className={s.chart}>\n                    <Chart country={this.state.country}></Chart>\n                </div>\n           \n            </div>\n        );\n\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App/>, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3Q2k1\",\"top\":\"App_top__DlJCD\",\"chart\":\"App_chart__20WRI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__1N3GM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Country_input__3kCkH\"};"],"sourceRoot":""}